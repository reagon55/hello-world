@Override
public Map<String, Object> llmUsecaseService(String usecase, String generatedToken, String opCoValue) {
    Map<String, Object> aiResponseMap = new HashMap<>();
    switch (usecase.toUpperCase()) {
        case Constants.SHOW_CONNECTED_DEVICES -> {
            Object response = deviceClient.getDevices(generatedToken, opCoValue);
            aiResponseMap.put(usecase, response);
        }
        case Constants.SHARE_WIFI_CREDENTIALS -> {
            // Use default credentials to create Wi-Fi credentials
            Object response = deviceClient.createWiFiCredentialsWithDefaults(generatedToken, opCoValue);
            aiResponseMap.put(usecase, response);
        }
        case Constants.SHARE_GUEST_WIFI -> {
            // Use default credentials to create guest Wi-Fi credentials
            Object response = deviceClient.createGuestWiFiCredentialsWithDefaults(generatedToken, opCoValue);
            aiResponseMap.put(usecase, response);
        }
        default -> aiResponseMap.put(usecase, Constants.MSA_JARVIS_UNSUPPORTED_REQUESTS_MESSAGE);
    }
    return aiResponseMap;
}
