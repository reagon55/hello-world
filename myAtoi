public class Solution {
    public int myAtoi(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }

        // Trim leading whitespace
        s = s.trim();
        if (s.length() == 0) {
            return 0;
        }

        int sign = 1;
        int start = 0;
        long result = 0;

        // Check for sign
        if (s.charAt(0) == '-' || s.charAt(0) == '+') {
            sign = (s.charAt(0) == '-') ? -1 : 1;
            start++;
        }

        for (int i = start; i < s.length(); i++) {
            if (!Character.isDigit(s.charAt(i))) {
                break;
            }
            result = result * 10 + (s.charAt(i) - '0');

            // Check for overflow
            if (sign == 1 && result > Integer.MAX_VALUE) {
                return Integer.MAX_VALUE;
            }
            if (sign == -1 && -result < Integer.MIN_VALUE) {
                return Integer.MIN_VALUE;
            }
        }

        return (int) result * sign;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        System.out.println(sol.myAtoi("42"));           // Output: 42
        System.out.println(sol.myAtoi("   -42"));       // Output: -42
        System.out.println(sol.myAtoi("4193 with words")); // Output: 4193
        System.out.println(sol.myAtoi("words and 987"));  // Output: 0
        System.out.println(sol.myAtoi("-91283472332")); // Output: -2147483648
    }
}
