@PostMapping(value = "voice-input", consumes = MediaType.MULTIPART_FORM_DATA_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
@Operation(description = "To retrieve the details of voice input")
@ApiResponse(responseCode = "200", description = "Success", content = @Content(mediaType = "application/json", schema = @Schema(implementation = VoiceaiDetails.class)))
@ApiResponse(responseCode = "500", description = "Internal Server Error")
public ResponseEntity<Object> processVoice(
        @RequestHeader(value = "Authorization", required = true) String authHeader,
        @RequestParam(value = "file", required = true) MultipartFile file,
        @RequestParam(value = "encoding", required = true) String mediaEncoding,
        @RequestParam(value = "sampleRateHertz", required = true) String mediaSampleRateHertz) {

    try {
        VoiceaiDetails voiceAiDetails = voiceAiService.processVoice(authHeader, file, mediaEncoding, mediaSampleRateHertz);
        return ResponseEntity.ok().body(voiceAiDetails);
    } catch (Exception e) {
        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Processing error: " + e.getMessage());
    }
}
