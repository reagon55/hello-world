Accessing Kafka in a development environment involves setting up Kafka and its dependencies and then using a client to interact with Kafka.

1. Install Kafka: Download and install Apache Kafka on your development machine.
2. Start Kafka Server: bin/kafka-server-start.sh config/server.properties
3. Create a Topic: Use the following command to create a topic named "test" (replace localhost:9092 with your Kafka broker's address if it's different):
bin/kafka-topics.sh --create --topic test --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1

4. Produce Messages:
Use the following command to produce messages to the "test" topic:
bin/kafka-console-producer.sh --topic test --bootstrap-server localhost:9092

5. Consume Messages:
Use the following command to consume messages from the "test" topic:
bin/kafka-console-consumer.sh --topic test --from-beginning --bootstrap-server localhost:9092

6. Set Up Kafka Clients:
If you're using a programming language like Java, Python, or Node.js, you can use Kafka client libraries to interact with Kafka in your code. 
Include the client library in your project and configure it to connect to your Kafka broker.

7.Access Control (Optional):
If your Kafka cluster is configured with authentication and authorization mechanisms (e.g., SSL/TLS, SASL), you'll need to configure your client to use the appropriate security settings to connect to Kafka.

8. Testing:
Test your Kafka setup by producing and consuming messages using the Kafka command-line tools or your Kafka client code.

This is a basic setup for accessing Kafka in a development environment. Depending on your specific requirements and environment, you may need to configure Kafka differently or use additional tools and libraries.

To see list of kafka topics available :
1. Using the Kafka Topics Command:
- Open a terminal window.
- Navigate to your Kafka installation directory.
- Use the following command to list all topics:
bin/kafka-topics.sh --list --bootstrap-server localhost:9092

- Replace localhost:9092 with the address of your Kafka broker if it's different.

2. Output:
- The command will output a list of all topics available on the Kafka cluster.

3. Listing Topics with Specific Options:
You can also use additional options with the kafka-topics.sh command to filter or format the output. For example, to list topics with more details, you can use:
bin/kafka-topics.sh --describe --bootstrap-server localhost:9092

Note : By using the kafka-topics.sh command or a similar tool, you can easily see the list of Kafka topics available on your Kafka cluster.


